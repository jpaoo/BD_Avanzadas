-- VISTAS PARA USUARIO a1700666 INSTANCIA slp 

-- INICIA VISTA COMPRAS GLOBALES

CREATE OR REPLACE VIEW PROYECTO_COMPRAS_GLOBAL AS
SELECT ID_COMPRA, ID_METODO_PAGO, ID_CLIENTE, FECHA, MONTO, CANTIDAD, 'KR' AS SUCURSAL FROM PROYECTO_COMPRAS
UNION (
  SELECT ID_COMPRA, ID_METODO_PAGO, ID_CLIENTE, FECHA, MONTO, CANTIDAD, 'JP' AS SUCURSAL FROM PROYECTO_COMPRAS@JP
) UNION (
  SELECT ID_COMPRA, ID_METODO_PAGO, ID_CLIENTE, FECHA, MONTO, CANTIDAD, 'MM' AS SUCURSAL FROM PROYECTO_COMPRAS@MM
) UNION (
  SELECT ID_COMPRA, ID_METODO_PAGO, ID_CLIENTE, FECHA, MONTO, CANTIDAD, 'MC' AS SUCURSAL FROM PROYECTO_COMPRAS@MC
) ORDER BY SUCURSAL;

-- TERMINA VISTA COMPRAS GLOBALES

-- INICIA VISTA INVENTARIO_SUCURSALES

CREATE OR REPLACE VIEW PROYECTO_INVENTARIO_SUCURSALES AS
select pls.id_libro, pl.titulo, 'KR' as Sucursal, pls.cantidad from proyecto_librossucursal pls, proyecto_libros pl where pls.id_libro = pl.id_libro
union
select pls.id_libro, pl.titulo, 'MC' as Sucursal, pls.cantidad from proyecto_librossucursal@mc pls, proyecto_libros pl where pls.id_libro = pl.id_libro
union
select pls.id_libro, pl.titulo, 'JP' as Sucursal, pls.cantidad from proyecto_librossucursal@jp pls, proyecto_libros pl where pls.id_libro = pl.id_libro
union
select pls.id_libro, pl.titulo, 'MM' as Sucursal, pls.cantidad from proyecto_librossucursal@mm pls, proyecto_libros pl where pls.id_libro = pl.id_libro
order by titulo;

-- TERMINA VISTA INVENTARIO_SUCURSALES

-- iNICIA VISTA LIBROS VENDIDOS DEL MES PASADO

CREATE OR REPLACE VIEW PROYECTO_VENTAS_MES_ANTERIOR AS
SELECT TITULO FROM PROYECTO_LIBROS WHERE ID_LIBRO IN (
  SELECT CL.ID_LIBRO
  FROM PROYECTO_COMPRAS PC, PROYECTO_COMPRASLIBRO CL
  WHERE PC.FECHA >= ADD_MONTHS(SYSDATE,-1) AND PC.ID_COMPRA = CL.ID_COMPRA
) UNION (
  SELECT TITULO FROM PROYECTO_LIBROS WHERE ID_LIBRO IN (
    SELECT CLM.ID_LIBRO
    FROM PROYECTO_COMPRAS@MC PCM, PROYECTO_COMPRASLIBRO@MC CLM
    WHERE PCM.FECHA >= ADD_MONTHS(SYSDATE,-1) AND PCM.ID_COMPRA = CLM.ID_COMPRA
  )
) UNION (
  SELECT TITULO FROM PROYECTO_LIBROS WHERE ID_LIBRO IN (
    SELECT CLMM.ID_LIBRO
    FROM PROYECTO_COMPRAS@MM PCMM, PROYECTO_COMPRASLIBRO@MM CLMM
    WHERE PCMM.FECHA >= ADD_MONTHS(SYSDATE,-1) AND PCMM.ID_COMPRA = CLMM.ID_COMPRA
  )
) UNION (
  SELECT TITULO FROM PROYECTO_LIBROS WHERE ID_LIBRO IN (
    SELECT CLJ.ID_LIBRO
    FROM PROYECTO_COMPRAS@JP PCJ, PROYECTO_COMPRASLIBRO@JP CLJ
    WHERE PCJ.FECHA >= ADD_MONTHS(SYSDATE,-1) AND PCJ.ID_COMPRA = CLJ.ID_COMPRA
  )
)

-- TERMINA VISTA LIBROS VENDIDOS DEL MES PASADO

-- INICIA VISTA LIBROS VENDIDOS DEL AÑO PASADO

CREATE OR REPLACE VIEW PROYECTO_VENTAS_ANIO_ANTERIOR AS
SELECT TITULO FROM PROYECTO_LIBROS WHERE ID_LIBRO IN (
  SELECT CL.ID_LIBRO
  FROM PROYECTO_COMPRAS PC, PROYECTO_COMPRASLIBRO CL
  WHERE PC.FECHA >= ADD_MONTHS(SYSDATE,-12) AND PC.ID_COMPRA = CL.ID_COMPRA
) UNION (
  SELECT TITULO FROM PROYECTO_LIBROS WHERE ID_LIBRO IN (
    SELECT CLM.ID_LIBRO
    FROM PROYECTO_COMPRAS@MC PCM, PROYECTO_COMPRASLIBRO@MC CLM
    WHERE PCM.FECHA >= ADD_MONTHS(SYSDATE,-12) AND PCM.ID_COMPRA = CLM.ID_COMPRA
  )
) UNION (
  SELECT TITULO FROM PROYECTO_LIBROS WHERE ID_LIBRO IN (
    SELECT CLMM.ID_LIBRO
    FROM PROYECTO_COMPRAS@MM PCMM, PROYECTO_COMPRASLIBRO@MM CLMM
    WHERE PCMM.FECHA >= ADD_MONTHS(SYSDATE,-12) AND PCMM.ID_COMPRA = CLMM.ID_COMPRA
  )
) UNION (
  SELECT TITULO FROM PROYECTO_LIBROS WHERE ID_LIBRO IN (
    SELECT CLJ.ID_LIBRO
    FROM PROYECTO_COMPRAS@JP PCJ, PROYECTO_COMPRASLIBRO@JP CLJ
    WHERE PCJ.FECHA >= ADD_MONTHS(SYSDATE,-12) AND PCJ.ID_COMPRA = CLJ.ID_COMPRA
  )
)

-- TERMINA VISTA LIBROS VENDIDOS DEL AÑO PASADO

-- INICIA VISTA TOTAL DE LIBROS VENDIDOS POR SUCURSAL

CREATE OR REPLACE VIEW PROYECTO_TOTAL_LIBROS_SUCURSAL AS
SELECT SUM(PC.CANTIDAD) AS LIBROS_VENDIDOS, 'KR' AS SUCURSAL
FROM PROYECTO_COMPRAS PC, PROYECTO_COMPRASLIBRO CL
WHERE PC.ID_COMPRA = CL.ID_COMPRA
UNION (
  SELECT SUM(PCM.CANTIDAD) AS LIBROS_VENDIDOS, 'MC' AS SUCURSAL
  FROM PROYECTO_COMPRAS@MC PCM, PROYECTO_COMPRASLIBRO@MC CLM
  WHERE PCM.ID_COMPRA = CLM.ID_COMPRA
)
UNION (
  SELECT SUM(PCMM.CANTIDAD) AS LIBROS_VENDIDOS, 'MM' AS SUCURSAL
  FROM PROYECTO_COMPRAS@MM PCMM, PROYECTO_COMPRASLIBRO@MM CLMM
  WHERE PCMM.ID_COMPRA = CLMM.ID_COMPRA
)
UNION (
  SELECT SUM(PCJ.CANTIDAD) AS LIBROS_VENDIDOS, 'JP' AS SUCURSAL
  FROM PROYECTO_COMPRAS@JP PCJ, PROYECTO_COMPRASLIBRO@JP CLJ
  WHERE PCJ.ID_COMPRA = CLJ.ID_COMPRA
)

-- TERMINA VISTA TOTAL DE LIBROS VENDIDOS POR SUCURSAL

-- INICIA VISTA VENTAS DE UN CIERTO TITULO

CREATE OR REPLACE VIEW PROYECTO_TOTAL_VENTAS_TITULO AS
SELECT TITULO, SUM(LIBROS_VENDIDOS) AS LIBROS_VENDIDOS FROM (
SELECT PL.TITULO, SUM(PC.CANTIDAD) AS LIBROS_VENDIDOS
FROM PROYECTO_COMPRAS@MM PC, PROYECTO_COMPRASLIBRO@MM CL, PROYECTO_LIBROS@MM PL
WHERE PC.ID_COMPRA = CL.ID_COMPRA AND CL.ID_LIBRO = PL.ID_LIBRO
GROUP BY PL.TITULO
UNION(
  SELECT PLM.TITULO, SUM(PCM.CANTIDAD) AS LIBROS_VENDIDOS
  FROM PROYECTO_COMPRAS@MC PCM, PROYECTO_COMPRASLIBRO@MC CLM, PROYECTO_LIBROS@MC PLM
  WHERE PCM.ID_COMPRA = CLM.ID_COMPRA AND CLM.ID_LIBRO = PLM.ID_LIBRO
  GROUP BY PLM.TITULO
) UNION (
  SELECT PLK.TITULO, SUM(PCK.CANTIDAD) AS LIBROS_VENDIDOS
  FROM PROYECTO_COMPRAS PCK, PROYECTO_COMPRASLIBRO CLK, PROYECTO_LIBROS PLK
  WHERE PCK.ID_COMPRA = CLK.ID_COMPRA AND CLK.ID_LIBRO = PLK.ID_LIBRO
  GROUP BY PLK.TITULO
) UNION (
  SELECT PLJ.TITULO, SUM(PCJ.CANTIDAD) AS LIBROS_VENDIDOS
  FROM PROYECTO_COMPRAS@JP PCJ, PROYECTO_COMPRASLIBRO@JP CLJ, PROYECTO_LIBROS@JP PLJ
  WHERE PCJ.ID_COMPRA = CLJ.ID_COMPRA AND CLJ.ID_LIBRO = PLJ.ID_LIBRO
  GROUP BY PLJ.TITULO
)) GROUP BY TITULO;

-- TERMINA VISTA VENTAS DE UN CIERTO TITULO

-- INICIA VISTA TOTAL DE LIBROS COMPRADOS POR CLIENTE

CREATE OR REPLACE VIEW PROYECTO_NR_COMPRAS_CLIENTE AS
SELECT SUM(LIBROS_COMPRADOS) AS TOTAL, CLIENTE FROM (
SELECT SUM(PC.CANTIDAD) AS LIBROS_COMPRADOS, CL.NOMBRE AS CLIENTE
FROM PROYECTO_COMPRAS PC, PROYECTO_CLIENTES CL
WHERE PC.ID_CLIENTE = CL.ID_CLIENTE
GROUP BY CL.NOMBRE
UNION (
  SELECT SUM(PCM.CANTIDAD) AS LIBROS_COMPRADOS, CLM.NOMBRE AS CLIENTE
  FROM PROYECTO_COMPRAS@MC PCM, PROYECTO_CLIENTES@MC CLM
  WHERE PCM.ID_CLIENTE = CLM.ID_CLIENTE
  GROUP BY CLM.NOMBRE
)
UNION (
  SELECT SUM(PCJ.CANTIDAD) AS LIBROS_COMPRADOS, CLJ.NOMBRE AS CLIENTE
  FROM PROYECTO_COMPRAS@JP PCJ, PROYECTO_CLIENTES@JP CLJ
  WHERE PCJ.ID_CLIENTE = CLJ.ID_CLIENTE
  GROUP BY CLJ.NOMBRE
)
UNION (
  SELECT SUM(PMM.CANTIDAD) AS LIBROS_COMPRADOS, PCMM.NOMBRE AS CLIENTE
  FROM PROYECTO_COMPRAS@MM PMM, PROYECTO_CLIENTES@MM PCMM
  WHERE PMM.ID_CLIENTE = PCMM.ID_CLIENTE
  GROUP BY PCMM.NOMBRE
)) GROUP BY CLIENTE;

-- TERMINA VISTA TOTAL DE LIBROS COMPRADOS POR CLIENTE

-- INICIA VISTA VENTAS POR CADA GENERO

CREATE OR REPLACE VIEW PROYECTO_TOTAL_VENTAS_GENERO AS
SELECT NOMBRE, SUM(LIBROS_VENDIDOS) AS LIBROS_VENDIDOS
FROM (
SELECT PG.NOMBRE, SUM(PC.CANTIDAD) AS LIBROS_VENDIDOS
FROM PROYECTO_GENEROS PG, PROYECTO_LIBROS PL, PROYECTO_COMPRAS PC, PROYECTO_COMPRASLIBRO PCL
WHERE PG.ID_GENERO = PL.ID_GENERO AND PC.ID_COMPRA = PCL.ID_COMPRA AND PCL.ID_LIBRO = PL.ID_LIBRO
GROUP BY PG.NOMBRE
UNION(
    SELECT PG.NOMBRE, SUM(PC.CANTIDAD) AS LIBROS_VENDIDOS
    FROM PROYECTO_GENEROS@MM PG, PROYECTO_LIBROS@MM PL, PROYECTO_COMPRAS@MM PC, PROYECTO_COMPRASLIBRO@MM PCL
    WHERE PG.ID_GENERO = PL.ID_GENERO AND PC.ID_COMPRA = PCL.ID_COMPRA AND PCL.ID_LIBRO = PL.ID_LIBRO
    GROUP BY PG.NOMBRE
)
UNION(
    SELECT PG.NOMBRE, SUM(PC.CANTIDAD) AS LIBROS_VENDIDOS
    FROM PROYECTO_GENEROS@JP PG, PROYECTO_LIBROS@JP PL, PROYECTO_COMPRAS@JP PC, PROYECTO_COMPRASLIBRO@JP PCL
    WHERE PG.ID_GENERO = PL.ID_GENERO AND PC.ID_COMPRA = PCL.ID_COMPRA AND PCL.ID_LIBRO = PL.ID_LIBRO
    GROUP BY PG.NOMBRE
)
UNION(
    SELECT PG.NOMBRE, SUM(PC.CANTIDAD) AS LIBROS_VENDIDOS
    FROM PROYECTO_GENEROS@MC PG, PROYECTO_LIBROS@MC PL, PROYECTO_COMPRAS@MC PC, PROYECTO_COMPRASLIBRO@MC PCL
    WHERE PG.ID_GENERO = PL.ID_GENERO AND PC.ID_COMPRA = PCL.ID_COMPRA AND PCL.ID_LIBRO = PL.ID_LIBRO
    GROUP BY PG.NOMBRE
)
) GROUP BY NOMBRE;

-- TERMINA VISTA VENTAS POR CADA GENERO

-- INICIA VISTA TODAS LAS ORDENES DE COMPRA

CREATE OR REPLACE VIEW PROYECTO_ORD_COMPRA_GLOBAL AS
SELECT ID_ORDENCOMPRA, ID_PROVEEDOR, FECHA, 'JP' AS SUCURSAL FROM PROYECTO_ORDENESCOMPRA@JP
UNION (
  SELECT ID_ORDENCOMPRA, ID_PROVEEDOR, FECHA, 'MM' AS SUCURSAL FROM PROYECTO_ORDENESCOMPRA@MM
) UNION (
  SELECT ID_ORDENCOMPRA, ID_PROVEEDOR, FECHA, 'KR' AS SUCURSAL FROM PROYECTO_ORDENESCOMPRA
) UNION (
  SELECT ID_ORDENCOMPRA, ID_PROVEEDOR, FECHA, 'MC' AS SUCURSAL FROM PROYECTO_ORDENESCOMPRA@MC
) ORDER BY SUCURSAL;

-- TERMINA VISTA TODAS LAS ORDENES DE COMPRA

-- INICIA VISTA COMPRAS POR CLIENTE DEL MES PASADO

CREATE OR REPLACE VIEW PROYECTO_NR_COMP_CLI_MES AS
SELECT SUM(LIBROS_COMPRADOS) AS TOTAL, CLIENTE FROM (
SELECT SUM(PCJ.CANTIDAD) AS LIBROS_COMPRADOS, CLJ.NOMBRE AS CLIENTE
FROM PROYECTO_COMPRAS@JP PCJ, PROYECTO_CLIENTES@JP CLJ
WHERE PCJ.ID_CLIENTE = CLJ.ID_CLIENTE
GROUP BY CLJ.NOMBRE
UNION (
  SELECT SUM(PCM.CANTIDAD) AS LIBROS_COMPRADOS, CLM.NOMBRE AS CLIENTE
  FROM PROYECTO_COMPRAS@MC PCM, PROYECTO_CLIENTES@MC CLM
  WHERE PCM.ID_CLIENTE = CLM.ID_CLIENTE AND PCM.FECHA >= ADD_MONTHS(SYSDATE,-1)
  GROUP BY CLM.NOMBRE
)
UNION (
  SELECT SUM(PCK.CANTIDAD) AS LIBROS_COMPRADOS, CLK.NOMBRE AS CLIENTE
  FROM PROYECTO_COMPRAS PCK, PROYECTO_CLIENTES CLK
  WHERE PCK.ID_CLIENTE = CLK.ID_CLIENTE AND PCK.FECHA >= ADD_MONTHS(SYSDATE,-1)
  GROUP BY CLK.NOMBRE
)
UNION (
  SELECT SUM(PMM.CANTIDAD) AS LIBROS_COMPRADOS, PCMM.NOMBRE AS CLIENTE
  FROM PROYECTO_COMPRAS@MM PMM, PROYECTO_CLIENTES@MM PCMM
  WHERE PMM.ID_CLIENTE = PCMM.ID_CLIENTE AND PMM.FECHA >= ADD_MONTHS(SYSDATE,-1)
  GROUP BY PCMM.NOMBRE
)) GROUP BY CLIENTE;

-- TERMINA VISTA COMPRAS POR CLIENTE DEL MES PASADO

-- INICIA VISTA METODOS DE PAGO USADOS POR SUCURSAL

CREATE OR REPLACE VIEW PROYECTO_TIPO_PAGO_SUCURSAL AS
SELECT  *  FROM ( SELECT SUM(PCJ.ID_METODO_PAGO) AS CANTIDAD_PAGOS, CLJ.NOMBRE AS METODO_PAGO, 'JP' AS SUCURSAL
  FROM PROYECTO_COMPRAS@JP PCJ, PROYECTO_METODOS_PAGO@JP CLJ
  WHERE PCJ.ID_METODO_PAGO = CLJ.ID_METODO_PAGO
  GROUP BY CLJ.NOMBRE ORDER BY CANTIDAD_PAGOS DESC ) WHERE ROWNUM <2
UNION (
  SELECT  *  FROM ( SELECT SUM(PCM.ID_METODO_PAGO) AS CANTIDAD_PAGOS, CLM.NOMBRE AS METODO_PAGO, 'MC' AS SUCURSAL
  FROM PROYECTO_COMPRAS@MC PCM, PROYECTO_METODOS_PAGO@MC CLM
  WHERE PCM.ID_METODO_PAGO = CLM.ID_METODO_PAGO
  GROUP BY CLM.NOMBRE ORDER BY CANTIDAD_PAGOS DESC ) WHERE ROWNUM <2
)
UNION (
  SELECT  *  FROM ( SELECT SUM(PCK.ID_METODO_PAGO) AS CANTIDAD_PAGOS, CLK.NOMBRE AS METODO_PAGO, 'MM' AS SUCURSAL
  FROM PROYECTO_COMPRAS@MM PCK, PROYECTO_METODOS_PAGO@MM CLK
  WHERE PCK.ID_METODO_PAGO = CLK.ID_METODO_PAGO
  GROUP BY CLK.NOMBRE ORDER BY CANTIDAD_PAGOS DESC ) WHERE ROWNUM <2
)
UNION (
  SELECT  *  FROM ( SELECT SUM(PC.ID_METODO_PAGO) AS CANTIDAD_PAGOS, MP.NOMBRE AS METODO_PAGO, 'KR' AS SUCURSAL
  FROM PROYECTO_COMPRAS PC, PROYECTO_METODOS_PAGO MP
  WHERE PC.ID_METODO_PAGO = MP.ID_METODO_PAGO
  GROUP BY MP.NOMBRE ORDER BY CANTIDAD_PAGOS DESC ) WHERE ROWNUM <2
);

-- TERMINA VISTA METODOS DE PAGO USADOS POR SUCURSAL

-- INICIA VISTA VENTAS POR CADA EDITORIAL

CREATE OR REPLACE VIEW PROYECTO_VENTAS_EDITORIAL AS
SELECT NOMBRE, SUM(LIBROS_VENDIDOS) AS LIBROS_VENDIDOS
FROM (
SELECT PE.NOMBRE, SUM(PC.CANTIDAD) AS LIBROS_VENDIDOS
FROM PROYECTO_EDITORIALES PE, PROYECTO_LIBROS PL, PROYECTO_COMPRAS PC, PROYECTO_COMPRASLIBRO PCL
WHERE PE.ID_EDITORIAL = PL.ID_EDITORIAL AND PC.ID_COMPRA = PCL.ID_COMPRA AND PCL.ID_LIBRO = PL.ID_LIBRO
GROUP BY PE.NOMBRE
UNION(
    SELECT PE.NOMBRE, SUM(PC.CANTIDAD) AS LIBROS_VENDIDOS
    FROM PROYECTO_EDITORIALES@MM PE, PROYECTO_LIBROS@MM PL, PROYECTO_COMPRAS@MM PC, PROYECTO_COMPRASLIBRO@MM PCL
    WHERE PE.ID_EDITORIAL = PL.ID_GENERO AND PC.ID_COMPRA = PCL.ID_COMPRA AND PCL.ID_LIBRO = PL.ID_LIBRO
    GROUP BY PE.NOMBRE
)
UNION(
    SELECT PE.NOMBRE, SUM(PC.CANTIDAD) AS LIBROS_VENDIDOS
    FROM PROYECTO_EDITORIALES@JP PE, PROYECTO_LIBROS@JP PL, PROYECTO_COMPRAS@JP PC, PROYECTO_COMPRASLIBRO@JP PCL
    WHERE PE.ID_EDITORIAL = PL.ID_GENERO AND PC.ID_COMPRA = PCL.ID_COMPRA AND PCL.ID_LIBRO = PL.ID_LIBRO
    GROUP BY PE.NOMBRE
)
UNION(
    SELECT PE.NOMBRE, SUM(PC.CANTIDAD) AS LIBROS_VENDIDOS
    FROM PROYECTO_EDITORIALES@MC PE, PROYECTO_LIBROS@MC PL, PROYECTO_COMPRAS@MC PC, PROYECTO_COMPRASLIBRO@MC PCL
    WHERE PE.ID_EDITORIAL = PL.ID_GENERO AND PC.ID_COMPRA = PCL.ID_COMPRA AND PCL.ID_LIBRO = PL.ID_LIBRO
    GROUP BY PE.NOMBRE
)
) GROUP BY NOMBRE;

-- TERMINA VISTA VENTAS POR CADA EDITORIAL